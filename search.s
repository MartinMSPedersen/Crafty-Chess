	.file	"search.c"
	.version	"01.01"
gcc2_compiled.:
.globl memcpy
.text
.globl Search
	.type	 Search,@function
Search:
	pushl %ebp
	movl %esp,%ebp
	subl $168,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl 12(%ebp),%eax
	movl 16(%ebp),%eax
	movl 32(%ebp),%esi
	movl $0,-20(%ebp)
	movl -20(%ebp),%ecx
	movl %ecx,-12(%ebp)
	movl %ecx,-4(%ebp)
	incl 22100(%edi)
	decl next_time_check
	cmpl $0,next_time_check
	jg .L37
	movl nodes_between_time_checks,%eax
	movl %eax,next_time_check
	call CheckInput
	testl %eax,%eax
	je .L38
	pushl %eax
	movl 28(%ebp),%ebx
	pushl %ebx
	call Interrupt
	addl $8,%esp
.L38:
	pushl %eax
	pushl $0
	call TimeCheck
	addl time_abort,%eax
	movl %eax,time_abort
	addl $8,%esp
	testl %eax,%eax
	je .L37
	movb $1,abort_search
.L207:
	xorl %eax,%eax
	jmp .L190
.L37:
	cmpl $63,28(%ebp)
	jle .L40
.L195:
	movl 16(%ebp),%eax
	jmp .L190
.L40:
	pushl %eax
	movl 20(%ebp),%ecx
	pushl %ecx
	movl 28(%ebp),%ebx
	pushl %ebx
	pushl %edi
	call RepetitionCheck
	addl $16,%esp
	testl %eax,%eax
	je .L41
	movl draw_score,%ecx
	movl %ecx,-20(%ebp)
	movl 20(%ebp),%ebx
	cmpl %ebx,root_wtm
	je .L42
	negl %ecx
	movl %ecx,-20(%ebp)
.L42:
	movl -20(%ebp),%ecx
	cmpl %ecx,16(%ebp)
	jle .L209
	movl 28(%ebp),%edx
	decl %edx
	movl %edx,%eax
	sall $5,%eax
	addl %edx,%eax
	sall $3,%eax
	leal (%eax,%edx,4),%ebx
	movl 4160(%edi,%edx,4),%edx
	movl %edx,4940(%ebx,%edi)
	movb 28(%ebp),%cl
	decb %cl
	movb %cl,5201(%eax,%edi)
	movb $0,5200(%eax,%edi)
	movb iteration_depth,%dl
	movb %dl,5202(%eax,%edi)
	jmp .L209
.L41:
	pushl %eax
	leal -4(%ebp),%eax
	pushl %eax
	leal 16(%ebp),%eax
	pushl %eax
	leal 12(%ebp),%eax
	pushl %eax
	movl 20(%ebp),%ebx
	pushl %ebx
	movl 24(%ebp),%ecx
	pushl %ecx
	movl 28(%ebp),%ebx
	pushl %ebx
	pushl %edi
	call HashProbe
	addl $32,%esp
	cmpl $2,%eax
	je .L194
	jg .L60
	cmpl $1,%eax
	je .L195
	jmp .L48
.L60:
	cmpl $3,%eax
	je .L49
	cmpl $4,%eax
	je .L57
	jmp .L48
.L49:
	movl 12(%ebp),%eax
	cmpl %eax,16(%ebp)
	jle .L194
	movl 28(%ebp),%edx
	decl %edx
	movl %edx,%eax
	sall $5,%eax
	addl %edx,%eax
	sall $3,%eax
	leal (%eax,%edx,4),%ecx
	movl 4160(%edi,%edx,4),%edx
	movl %edx,4940(%ecx,%edi)
	movb 28(%ebp),%bl
	decb %bl
	movb %bl,5201(%eax,%edi)
	movb $1,5200(%eax,%edi)
	movb iteration_depth,%dl
	movb %dl,5202(%eax,%edi)
	jmp .L194
.L57:
	xorl %esi,%esi
.L48:
	movsbl 226(%edi),%eax
	cmpl %eax,EGTB_use
	jl .L61
	movl 28(%ebp),%ecx
	cmpl %ecx,EGTB_maxdepth
	jle .L61
	incl 22132(%edi)
	leal -8(%ebp),%eax
	pushl %eax
	movl 20(%ebp),%ebx
	pushl %ebx
	pushl %ecx
	pushl %edi
	call EGTBProbe
	addl $16,%esp
	testl %eax,%eax
	je .L61
	incl 22136(%edi)
	movl -8(%ebp),%eax
	movl %eax,12(%ebp)
	testl %eax,%eax
	jge .L64
	negl %eax
.L64:
	cmpl $32468,%eax
	jle .L63
	cmpl $0,12(%ebp)
	jle .L65
	movl 12(%ebp),%eax
	incl %eax
	subl 28(%ebp),%eax
	jmp .L69
.L65:
	movl 28(%ebp),%eax
	addl 12(%ebp),%eax
	jmp .L69
.L63:
	cmpl $0,12(%ebp)
	jne .L67
	movl draw_score,%eax
	movl 20(%ebp),%ecx
	cmpl %ecx,root_wtm
	je .L69
	negl %eax
.L69:
	movl %eax,12(%ebp)
.L67:
	movl 12(%ebp),%eax
	cmpl %eax,16(%ebp)
	jle .L194
	movl 28(%ebp),%edx
	decl %edx
	movl %edx,%eax
	sall $5,%eax
	addl %edx,%eax
	sall $3,%eax
	leal (%eax,%edx,4),%ebx
	movl 4160(%edi,%edx,4),%edx
	movl %edx,4940(%ebx,%edi)
	movb 28(%ebp),%cl
	decb %cl
	movb %cl,5201(%eax,%edi)
	movb $2,5200(%eax,%edi)
	movb iteration_depth,%dl
	movb %dl,5202(%eax,%edi)
	jmp .L194
.L61:
	movl 28(%ebp),%eax
	incl %eax
	movb $0,45204(%eax,%edi)
	movb $0,45269(%eax,%edi)
	movl 12(%ebp),%ebx
	movl %ebx,-16(%ebp)
	movl 28(%ebp),%ecx
	movl 4676(%edi,%ecx,4),%eax
	movl %eax,4680(%edi,%ecx,4)
	cmpl $0,20(%ebp)
	je .L75
	movsbl 218(%edi),%eax
	jmp .L76
.L75:
	movsbl 222(%edi),%eax
.L76:
	testl %esi,%esi
	je .L77
	movl 28(%ebp),%ebx
	cmpb $0,45204(%ebx,%edi)
	jne .L77
	testl %eax,%eax
	je .L77
	cmpl $5,%eax
	jg .L78
	cmpl $420,24(%ebp)
	jg .L77
.L78:
	movl 28(%ebp),%ecx
	leal 0(,%ecx,4),%edx
	movl $0,4160(%edx,%edi)
	movb $0,45334(%ecx,%edi)
	leal 4(,%ecx,4),%ebx
	movl %ebx,-148(%ebp)
	movl 3624(%edx,%edi),%eax
	movl %eax,3624(%ebx,%edi)
	incb 3627(%ebx,%edi)
	movl 136(%edi),%ecx
	movl %ecx,-168(%ebp)
	movl 140(%edi),%ecx
	movl %ecx,-164(%ebp)
	cmpb $0,3624(%edx,%edi)
	je .L79
	xorl %eax,%eax
	movb 3624(%ebx,%edi),%al
	movl enpassant_random(,%eax,8),%ebx
	xorl %ebx,136(%edi)
	movl enpassant_random+4(,%eax,8),%ebx
	xorl %ebx,140(%edi)
	movl -148(%ebp),%ecx
	movb $0,3624(%ecx,%edi)
.L79:
	movl 24(%ebp),%edx
	addl $-180,%edx
	cmpl $59,%edx
	jle .L80
	pushl %eax
	pushl $0
	movl 28(%ebp),%eax
	incl %eax
	pushl %eax
	pushl %edx
	movl 20(%ebp),%eax
	xorb $1,%al
	pushl %eax
	movl 16(%ebp),%eax
	negl %eax
	incl %eax
	pushl %eax
	movl 16(%ebp),%eax
	negl %eax
	pushl %eax
	pushl %edi
	call Search
	addl $32,%esp
	jmp .L196
.L80:
	pushl %eax
	movl 28(%ebp),%eax
	incl %eax
	pushl %eax
	movl 20(%ebp),%eax
	xorb $1,%al
	pushl %eax
	movl 16(%ebp),%eax
	negl %eax
	incl %eax
	pushl %eax
	movl 16(%ebp),%eax
	negl %eax
	pushl %eax
	pushl %edi
	call Quiesce
	addl $24,%esp
.L196:
	movl %eax,-20(%ebp)
	negl -20(%ebp)
	movl -168(%ebp),%ebx
	movl %ebx,136(%edi)
	movl -164(%ebp),%ebx
	movl %ebx,140(%edi)
	cmpb $0,abort_search
	jne .L207
	movb 45684(%edi),%al
	testb %al,%al
	jne .L207
	movl -20(%ebp),%ecx
	cmpl %ecx,16(%ebp)
	jg .L84
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	pushl %ecx
	pushl $1
	movl 20(%ebp),%ebx
	pushl %ebx
	movl 24(%ebp),%ecx
	pushl %ecx
	movl 28(%ebp),%ebx
	pushl %ebx
	pushl %edi
	call HashStore
.L209:
	movl -20(%ebp),%eax
	jmp .L190
.L84:
	cmpl $-32738,-20(%ebp)
	jge .L77
	movl $1,-4(%ebp)
.L77:
	movl 28(%ebp),%ecx
	leal (%ecx,%ecx,2),%eax
	movl $1,244(%edi,%eax,4)
	cmpl $0,4420(%edi,%ecx,4)
	jne .L86
	cmpl $120,24(%ebp)
	jle .L86
	testb $1,%cl
	je .L191
	movl 12(%ebp),%eax
	cmpl %eax,root_alpha
	jne .L88
	movl 16(%ebp),%eax
	cmpl %eax,root_beta
	je .L87
.L88:
	movl 28(%ebp),%ebx
	testb $1,%bl
	jne .L86
.L191:
	movl root_beta,%eax
	negl %eax
	cmpl %eax,12(%ebp)
	jne .L86
	movl root_alpha,%eax
	negl %eax
	cmpl %eax,16(%ebp)
	jne .L86
.L87:
	movl 28(%ebp),%ecx
	movl $0,4160(%edi,%ecx,4)
	movl 24(%ebp),%eax
	addl $-120,%eax
	cmpl $59,%eax
	jle .L89
	pushl %eax
	pushl $1
	pushl %ecx
	pushl %eax
	movl 20(%ebp),%ebx
	pushl %ebx
	movl 16(%ebp),%eax
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	pushl %edi
	call Search
	addl $32,%esp
	jmp .L198
.L89:
	pushl %eax
	movl 28(%ebp),%ecx
	pushl %ecx
	movl 20(%ebp),%ebx
	pushl %ebx
	movl 16(%ebp),%eax
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	pushl %edi
	call Quiesce
	addl $24,%esp
.L198:
	movl %eax,-20(%ebp)
	cmpb $0,abort_search
	jne .L207
	movb 45684(%edi),%al
	testb %al,%al
	jne .L207
	movl -20(%ebp),%ecx
	cmpl %ecx,12(%ebp)
	jl .L93
	movl 24(%ebp),%eax
	addl $-120,%eax
	cmpl $59,%eax
	jle .L94
	pushl %eax
	pushl $1
	movl 28(%ebp),%ebx
	pushl %ebx
	pushl %eax
	movl 20(%ebp),%ecx
	pushl %ecx
	movl 16(%ebp),%eax
	pushl %eax
	pushl $-32768
	pushl %edi
	call Search
	addl $32,%esp
	jmp .L199
.L94:
	pushl %eax
	movl 28(%ebp),%ebx
	pushl %ebx
	movl 20(%ebp),%ecx
	pushl %ecx
	movl 16(%ebp),%eax
	pushl %eax
	pushl $-32768
	pushl %edi
	call Quiesce
	addl $24,%esp
.L199:
	movl %eax,-20(%ebp)
	cmpb $0,abort_search
	jne .L207
	movb 45684(%edi),%al
	testb %al,%al
	je .L98
	jmp .L207
.L93:
	movl -20(%ebp),%ebx
	cmpl %ebx,16(%ebp)
	jle .L99
	movl 28(%ebp),%eax
	sall $5,%eax
	movl 28(%ebp),%ecx
	leal -33(%ecx,%eax),%eax
	leal 0(,%eax,8),%edx
	xorl %eax,%eax
	movb 5201(%edx,%edi),%al
	cmpl %ecx,%eax
	jl .L98
	leal (%edx,%ecx,4),%eax
	movl 4940(%eax,%edi),%eax
	movl %eax,4420(%edi,%ecx,4)
	jmp .L98
.L99:
	movl 28(%ebp),%ebx
	leal 0(,%ebx,4),%edx
	movl 4160(%edx,%edi),%eax
	movl %eax,4420(%edx,%edi)
.L98:
	movl 28(%ebp),%ecx
	movl 4676(%edi,%ecx,4),%eax
	movl %eax,4680(%edi,%ecx,4)
	leal (%ecx,%ecx,2),%eax
	movl $1,244(%edi,%eax,4)
.L86:
	movl 28(%ebp),%ebx
	sall $2,%ebx
	movl %ebx,-28(%ebp)
	movl 28(%ebp),%ecx
	decl %ecx
	movl %ecx,-32(%ebp)
	leal 0(,%ecx,4),%ebx
	movl %ebx,-36(%ebp)
	movl 28(%ebp),%ecx
	incl %ecx
	movl %ecx,-108(%ebp)
.L102:
	movl 28(%ebp),%ebx
	leal (%ebx,%edi),%esi
	cmpb $0,45204(%ebx,%edi)
	je .L105
	pushl %eax
	movl 20(%ebp),%ecx
	pushl %ecx
	pushl %ebx
	pushl %edi
	call NextEvasion
	jmp .L200
.L105:
	pushl %eax
	movl 20(%ebp),%ebx
	pushl %ebx
	movl 28(%ebp),%ecx
	pushl %ecx
	pushl %edi
	call NextMove
.L200:
	addl $16,%esp
	movb %al,45334(%esi)
	testb %al,%al
	je .L103
	movl 28(%ebp),%ebx
	andb $1,45269(%ebx,%edi)
	movl $-60,-24(%ebp)
	cmpl $0,-4(%ebp)
	je .L107
	movl iteration_depth,%ecx
	movl %ecx,%eax
	addl %ecx,%eax
	cmpl %eax,%ebx
	jle .L108
	movl threat_depth,%eax
	sarl $1,%eax
	addl %eax,-24(%ebp)
	jmp .L107
.L108:
	movl threat_depth,%ebx
	addl %ebx,-24(%ebp)
.L107:
	movl -28(%ebp),%ecx
	movl 4160(%ecx,%edi),%eax
	sarl $15,%eax
	andl $7,%eax
	movl %eax,-168(%ebp)
	je .L110
	movl -36(%ebp),%ebx
	movl 4160(%ebx,%edi),%eax
	sarl $15,%eax
	movl %eax,%esi
	andl $7,%esi
	je .L110
	movl 4160(%ebx,%edi),%edx
	sarl $6,%edx
	andl $63,%edx
	movl 4160(%ecx,%edi),%eax
	sarl $6,%eax
	andl $63,%eax
	cmpl %eax,%edx
	jne .L110
	movl p_values+28(,%esi,4),%eax
	movl -168(%ebp),%ecx
	cmpl %eax,p_values+28(,%ecx,4)
	je .L111
	testb $28,4162(%ebx,%edi)
	je .L110
.L111:
	movl -32(%ebp),%ebx
	testb $2,45269(%ebx,%edi)
	jne .L110
	movl 28(%ebp),%ecx
	orb $2,45269(%ecx,%edi)
	incl 22144(%edi)
	movl iteration_depth,%ebx
	movl %ebx,%eax
	addl %ebx,%eax
	cmpl %eax,%ecx
	jle .L112
	movl recap_depth,%eax
	sarl $1,%eax
	addl %eax,-24(%ebp)
	jmp .L110
.L112:
	movl recap_depth,%ecx
	addl %ecx,-24(%ebp)
.L110:
	movl -28(%ebp),%ebx
	movl 4160(%ebx,%edi),%eax
	sarl $12,%eax
	andl $7,%eax
	cmpl $1,%eax
	jne .L114
	movl 4160(%ebx,%edi),%eax
	sarl $6,%eax
	andl $63,%eax
	cmpb $0,push_extensions(%eax)
	je .L114
	movl 28(%ebp),%ecx
	orb $4,45269(%ecx,%edi)
	incl 22148(%edi)
	movl iteration_depth,%ebx
	movl %ebx,%eax
	addl %ebx,%eax
	cmpl %eax,%ecx
	jle .L115
	movl pushpp_depth,%eax
	sarl $1,%eax
	addl %eax,-24(%ebp)
	jmp .L114
.L115:
	movl pushpp_depth,%ecx
	addl %ecx,-24(%ebp)
.L114:
	movl 20(%ebp),%ebx
	pushl %ebx
	movl -28(%ebp),%ecx
	movl 4160(%ecx,%edi),%eax
	pushl %eax
	movl 28(%ebp),%ebx
	pushl %ebx
	pushl %edi
	call MakeMove
	addl $16,%esp
	cmpb $0,45204(%ebx,%edi)
	jne .L118
	cmpl $0,20(%ebp)
	je .L119
	movsbl 152(%edi),%eax
	jmp .L120
.L119:
	movsbl 153(%edi),%eax
.L120:
	movl %eax,%esi
	cmpl $1,20(%ebp)
	je .L121
	pushl %edi
	leal 0(,%esi,8),%eax
	subl %esi,%eax
	leal diag_info(,%eax,4),%eax
	pushl %eax
	call AttacksBishopFunc
	movl %eax,-48(%ebp)
	movl %edx,-44(%ebp)
	pushl %edi
	pushl %esi
	call AttacksRookFunc
	movl %eax,-56(%ebp)
	movl %edx,-52(%ebp)
	sall $3,%esi
	movl b_pawn_attacks(%esi),%ecx
	movl b_pawn_attacks+4(%esi),%ebx
	andl 56(%edi),%ecx
	andl 60(%edi),%ebx
	movl %ecx,-160(%ebp)
	movl %ebx,-156(%ebp)
	movl knight_attacks(%esi),%eax
	movl knight_attacks+4(%esi),%edx
	andl 64(%edi),%eax
	andl 68(%edi),%edx
	movl -160(%ebp),%ecx
	movl -156(%ebp),%ebx
	orl %eax,%ecx
	orl %edx,%ebx
	movl %ecx,-160(%ebp)
	movl %ebx,-156(%ebp)
	movl -48(%ebp),%eax
	movl -44(%ebp),%edx
	andl 48(%edi),%eax
	andl 52(%edi),%edx
	andl (%edi),%eax
	andl 4(%edi),%edx
	movl -160(%ebp),%ecx
	movl -156(%ebp),%ebx
	orl %eax,%ecx
	orl %edx,%ebx
	movl %ecx,-160(%ebp)
	movl %ebx,-156(%ebp)
	movl -56(%ebp),%eax
	movl -52(%ebp),%edx
	andl 40(%edi),%eax
	andl 44(%edi),%edx
	andl (%edi),%eax
	andl 4(%edi),%edx
	movl -160(%ebp),%ecx
	movl -156(%ebp),%ebx
	orl %eax,%ecx
	orl %edx,%ebx
	movl %ecx,-160(%ebp)
	movl %ebx,-156(%ebp)
	movsbl 152(%edi),%eax
	jmp .L201
.L121:
	pushl %edi
	leal 0(,%esi,8),%eax
	subl %esi,%eax
	leal diag_info(,%eax,4),%eax
	pushl %eax
	call AttacksBishopFunc
	movl %eax,-64(%ebp)
	movl %edx,-60(%ebp)
	pushl %edi
	pushl %esi
	call AttacksRookFunc
	movl %eax,-72(%ebp)
	movl %edx,-68(%ebp)
	sall $3,%esi
	movl w_pawn_attacks(%esi),%ecx
	movl w_pawn_attacks+4(%esi),%ebx
	andl 96(%edi),%ecx
	andl 100(%edi),%ebx
	movl %ecx,-160(%ebp)
	movl %ebx,-156(%ebp)
	movl knight_attacks(%esi),%eax
	movl knight_attacks+4(%esi),%edx
	andl 104(%edi),%eax
	andl 108(%edi),%edx
	movl -160(%ebp),%ecx
	movl -156(%ebp),%ebx
	orl %eax,%ecx
	orl %edx,%ebx
	movl %ecx,-160(%ebp)
	movl %ebx,-156(%ebp)
	movl -64(%ebp),%eax
	movl -60(%ebp),%edx
	andl 48(%edi),%eax
	andl 52(%edi),%edx
	andl 8(%edi),%eax
	andl 12(%edi),%edx
	movl -160(%ebp),%ecx
	movl -156(%ebp),%ebx
	orl %eax,%ecx
	orl %edx,%ebx
	movl %ecx,-160(%ebp)
	movl %ebx,-156(%ebp)
	movl -72(%ebp),%eax
	movl -68(%ebp),%edx
	andl 40(%edi),%eax
	andl 44(%edi),%edx
	andl 8(%edi),%eax
	andl 12(%edi),%edx
	movl -160(%ebp),%ecx
	movl -156(%ebp),%ebx
	orl %eax,%ecx
	orl %edx,%ebx
	movl %ecx,-160(%ebp)
	movl %ebx,-156(%ebp)
	movsbl 153(%edi),%eax
.L201:
	movl king_attacks(%esi),%ecx
	movl king_attacks+4(%esi),%ebx
	andl set_mask(,%eax,8),%ecx
	andl set_mask+4(,%eax,8),%ebx
	movl %ecx,%eax
	movl %ebx,%edx
	orl -160(%ebp),%eax
	orl -156(%ebp),%edx
	addl $16,%esp
	testl %eax,%eax
	jne .L210
	testl %edx,%edx
	jne .L210
	xorl %eax,%eax
	jmp .L211
.L210:
	movl $1,%eax
.L211:
	testl %eax,%eax
	jne .L117
.L118:
	cmpl $1,20(%ebp)
	je .L127
	movsbl 152(%edi),%eax
	jmp .L128
.L127:
	movsbl 153(%edi),%eax
.L128:
	movl %eax,%esi
	cmpl $0,20(%ebp)
	je .L129
	pushl %edi
	leal 0(,%esi,8),%eax
	subl %esi,%eax
	leal diag_info(,%eax,4),%eax
	pushl %eax
	call AttacksBishopFunc
	movl %eax,-80(%ebp)
	movl %edx,-76(%ebp)
	pushl %edi
	pushl %esi
	call AttacksRookFunc
	movl %eax,-88(%ebp)
	movl %edx,-84(%ebp)
	sall $3,%esi
	movl b_pawn_attacks(%esi),%ecx
	movl b_pawn_attacks+4(%esi),%ebx
	andl 56(%edi),%ecx
	andl 60(%edi),%ebx
	movl %ecx,-160(%ebp)
	movl %ebx,-156(%ebp)
	movl knight_attacks(%esi),%eax
	movl knight_attacks+4(%esi),%edx
	andl 64(%edi),%eax
	andl 68(%edi),%edx
	movl -160(%ebp),%ecx
	movl -156(%ebp),%ebx
	orl %eax,%ecx
	orl %edx,%ebx
	movl %ecx,-160(%ebp)
	movl %ebx,-156(%ebp)
	movl -80(%ebp),%eax
	movl -76(%ebp),%edx
	andl 48(%edi),%eax
	andl 52(%edi),%edx
	andl (%edi),%eax
	andl 4(%edi),%edx
	movl -160(%ebp),%ecx
	movl -156(%ebp),%ebx
	orl %eax,%ecx
	orl %edx,%ebx
	movl %ecx,-160(%ebp)
	movl %ebx,-156(%ebp)
	movl -88(%ebp),%eax
	movl -84(%ebp),%edx
	andl 40(%edi),%eax
	andl 44(%edi),%edx
	andl (%edi),%eax
	andl 4(%edi),%edx
	movl -160(%ebp),%ecx
	movl -156(%ebp),%ebx
	orl %eax,%ecx
	orl %edx,%ebx
	movl %ecx,-160(%ebp)
	movl %ebx,-156(%ebp)
	movsbl 152(%edi),%eax
	jmp .L202
.L129:
	pushl %edi
	leal 0(,%esi,8),%eax
	subl %esi,%eax
	leal diag_info(,%eax,4),%eax
	pushl %eax
	call AttacksBishopFunc
	movl %eax,-96(%ebp)
	movl %edx,-92(%ebp)
	pushl %edi
	pushl %esi
	call AttacksRookFunc
	movl %eax,-104(%ebp)
	movl %edx,-100(%ebp)
	sall $3,%esi
	movl w_pawn_attacks(%esi),%ecx
	movl w_pawn_attacks+4(%esi),%ebx
	andl 96(%edi),%ecx
	andl 100(%edi),%ebx
	movl %ecx,-160(%ebp)
	movl %ebx,-156(%ebp)
	movl knight_attacks(%esi),%eax
	movl knight_attacks+4(%esi),%edx
	andl 104(%edi),%eax
	andl 108(%edi),%edx
	movl -160(%ebp),%ecx
	movl -156(%ebp),%ebx
	orl %eax,%ecx
	orl %edx,%ebx
	movl %ecx,-160(%ebp)
	movl %ebx,-156(%ebp)
	movl -96(%ebp),%eax
	movl -92(%ebp),%edx
	andl 48(%edi),%eax
	andl 52(%edi),%edx
	andl 8(%edi),%eax
	andl 12(%edi),%edx
	movl -160(%ebp),%ecx
	movl -156(%ebp),%ebx
	orl %eax,%ecx
	orl %edx,%ebx
	movl %ecx,-160(%ebp)
	movl %ebx,-156(%ebp)
	movl -104(%ebp),%eax
	movl -100(%ebp),%edx
	andl 40(%edi),%eax
	andl 44(%edi),%edx
	andl 8(%edi),%eax
	andl 12(%edi),%edx
	movl -160(%ebp),%ecx
	movl -156(%ebp),%ebx
	orl %eax,%ecx
	orl %edx,%ebx
	movl %ecx,-160(%ebp)
	movl %ebx,-156(%ebp)
	movsbl 153(%edi),%eax
.L202:
	movl king_attacks(%esi),%ecx
	movl king_attacks+4(%esi),%ebx
	andl set_mask(,%eax,8),%ecx
	andl set_mask+4(,%eax,8),%ebx
	movl %ecx,%eax
	movl %ebx,%edx
	orl -160(%ebp),%eax
	orl -156(%ebp),%edx
	addl $16,%esp
	testl %eax,%eax
	jne .L212
	testl %edx,%edx
	jne .L212
	xorl %eax,%eax
	jmp .L213
.L212:
	movl $1,%eax
.L213:
	testl %eax,%eax
	je .L126
	movl -108(%ebp),%ebx
	movb $1,45204(%ebx,%edi)
	movb $1,45269(%ebx,%edi)
	incl 22140(%edi)
	movl iteration_depth,%ecx
	movl %ecx,%eax
	addl %ecx,%eax
	cmpl %eax,28(%ebp)
	jle .L134
	movl incheck_depth,%eax
	sarl $1,%eax
	addl %eax,-24(%ebp)
	jmp .L136
.L134:
	movl incheck_depth,%ebx
	addl %ebx,-24(%ebp)
	jmp .L136
.L126:
	movl -108(%ebp),%ecx
	movb $0,45204(%ecx,%edi)
	movb $0,45269(%ecx,%edi)
.L136:
	movl 24(%ebp),%eax
	addl $-120,%eax
	cmpl $59,%eax
	ja .L137
	movl 28(%ebp),%ebx
	cmpb $0,45204(%ebx,%edi)
	jne .L137
	cmpl $-60,-24(%ebp)
	jne .L137
	pushl %eax
	movl $51,%eax
	subl 12(%ebp),%eax
	pushl %eax
	movl 16(%ebp),%eax
	addl $51,%eax
	negl %eax
	pushl %eax
	movl 20(%ebp),%eax
	xorb $1,%al
	pushl %eax
	movl -108(%ebp),%ecx
	pushl %ecx
	pushl %edi
	call Evaluate
	negl %eax
	addl $50,%eax
	addl $24,%esp
	cmpl %eax,12(%ebp)
	jle .L137
	movl $-120,-24(%ebp)
.L137:
	cmpl $0,-12(%ebp)
	jne .L139
	movl 28(%ebp),%ebx
	cmpb $0,45204(%ebx,%edi)
	je .L140
	movl -36(%ebp),%ecx
	movl 4680(%ecx,%edi),%eax
	movl -28(%ebp),%ebx
	movl 4680(%ebx,%edi),%ecx
	subl %eax,%ecx
	movl %ecx,%eax
	sarl $2,%eax
	cmpl $1,%eax
	jne .L140
	movl 28(%ebp),%ebx
	orb $8,45269(%ebx,%edi)
	incl 22152(%edi)
	movl iteration_depth,%ecx
	movl %ecx,%eax
	addl %ecx,%eax
	cmpl %eax,%ebx
	jle .L141
	movl onerep_depth,%eax
	sarl $1,%eax
	addl %eax,-24(%ebp)
	jmp .L140
.L141:
	movl onerep_depth,%ebx
	addl %ebx,-24(%ebp)
.L140:
	cmpl $0,-24(%ebp)
	jle .L143
	movl $0,-24(%ebp)
.L143:
	movl 24(%ebp),%eax
	addl -24(%ebp),%eax
	cmpl $59,%eax
	jle .L144
	pushl %eax
	pushl $1
	movl -108(%ebp),%ecx
	pushl %ecx
	pushl %eax
	movl 20(%ebp),%eax
	xorb $1,%al
	pushl %eax
	movl 12(%ebp),%eax
	negl %eax
	pushl %eax
	movl 16(%ebp),%eax
	negl %eax
	pushl %eax
	pushl %edi
	call Search
	addl $32,%esp
	jmp .L203
.L144:
	pushl %eax
	movl -108(%ebp),%ebx
	pushl %ebx
	movl 20(%ebp),%eax
	xorb $1,%al
	pushl %eax
	movl 12(%ebp),%eax
	negl %eax
	pushl %eax
	movl 16(%ebp),%eax
	negl %eax
	pushl %eax
	pushl %edi
	call Quiesce
	addl $24,%esp
.L203:
	movl %eax,-20(%ebp)
	negl -20(%ebp)
	cmpb $0,abort_search
	jne .L147
	movb 45684(%edi),%al
	testb %al,%al
	je .L148
.L147:
	movl 20(%ebp),%ecx
	pushl %ecx
	movl -28(%ebp),%ebx
	movl 4160(%ebx,%edi),%eax
	pushl %eax
	movl 28(%ebp),%ecx
	pushl %ecx
	jmp .L204
.L139:
	cmpl $0,-24(%ebp)
	jle .L149
	movl $0,-24(%ebp)
.L149:
	movl 24(%ebp),%eax
	addl -24(%ebp),%eax
	cmpl $59,%eax
	jle .L150
	pushl %eax
	pushl $1
	movl -108(%ebp),%ebx
	pushl %ebx
	pushl %eax
	movl 20(%ebp),%eax
	xorb $1,%al
	pushl %eax
	movl 12(%ebp),%eax
	negl %eax
	pushl %eax
	movl 12(%ebp),%eax
	notl %eax
	pushl %eax
	pushl %edi
	call Search
	addl $32,%esp
	jmp .L205
.L150:
	pushl %eax
	movl -108(%ebp),%ecx
	pushl %ecx
	movl 20(%ebp),%eax
	xorb $1,%al
	pushl %eax
	movl 12(%ebp),%eax
	negl %eax
	pushl %eax
	movl 12(%ebp),%eax
	notl %eax
	pushl %eax
	pushl %edi
	call Quiesce
	addl $24,%esp
.L205:
	movl %eax,-20(%ebp)
	negl -20(%ebp)
	cmpb $0,abort_search
	jne .L158
	movb 45684(%edi),%al
	testb %al,%al
	jne .L158
	movl -20(%ebp),%ecx
	cmpl %ecx,12(%ebp)
	jge .L159
	cmpl %ecx,16(%ebp)
	jle .L148
	movl 24(%ebp),%eax
	addl -24(%ebp),%eax
	cmpl $59,%eax
	jle .L155
	pushl %eax
	pushl $1
	movl -108(%ebp),%ebx
	pushl %ebx
	pushl %eax
	movl 20(%ebp),%eax
	xorb $1,%al
	pushl %eax
	movl 12(%ebp),%eax
	negl %eax
	pushl %eax
	movl 16(%ebp),%eax
	negl %eax
	pushl %eax
	pushl %edi
	call Search
	addl $32,%esp
	jmp .L206
.L155:
	pushl %eax
	movl -108(%ebp),%ecx
	pushl %ecx
	movl 20(%ebp),%eax
	xorb $1,%al
	pushl %eax
	movl 12(%ebp),%eax
	negl %eax
	pushl %eax
	movl 16(%ebp),%eax
	negl %eax
	pushl %eax
	pushl %edi
	call Quiesce
	addl $24,%esp
.L206:
	movl %eax,-20(%ebp)
	negl -20(%ebp)
	cmpb $0,abort_search
	jne .L158
	movb 45684(%edi),%al
	testb %al,%al
	je .L148
.L158:
	movl 20(%ebp),%ebx
	pushl %ebx
	movl -28(%ebp),%ecx
	movl 4160(%ecx,%edi),%eax
	pushl %eax
	movl 28(%ebp),%ebx
	pushl %ebx
.L204:
	pushl %edi
	call UnMakeMove
	jmp .L207
.L148:
	movl -20(%ebp),%ecx
	cmpl %ecx,12(%ebp)
	jge .L159
	cmpl %ecx,16(%ebp)
	jg .L160
	pushl %eax
	movl -28(%ebp),%ebx
	movl 4160(%ebx,%edi),%eax
	pushl %eax
	movl 20(%ebp),%ecx
	pushl %ecx
	movl 24(%ebp),%ebx
	pushl %ebx
	movl 28(%ebp),%ecx
	pushl %ecx
	pushl %edi
	call History
	movl 20(%ebp),%ebx
	pushl %ebx
	movl -28(%ebp),%ecx
	movl 4160(%ecx,%edi),%eax
	pushl %eax
	movl 28(%ebp),%ebx
	pushl %ebx
	pushl %edi
	call UnMakeMove
	addl $40,%esp
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	movl -20(%ebp),%ecx
	pushl %ecx
	pushl $1
	movl 20(%ebp),%ebx
	pushl %ebx
	movl 24(%ebp),%ecx
	pushl %ecx
	movl 28(%ebp),%ebx
	pushl %ebx
	pushl %edi
	call HashStore
	incl 22104(%edi)
	cmpl $0,-12(%ebp)
	jne .L209
	incl 22108(%edi)
	jmp .L209
.L160:
	movl -20(%ebp),%ecx
	movl %ecx,12(%ebp)
.L159:
	incl -12(%ebp)
	jmp .L162
.L117:
	incl 22100(%edi)
.L162:
	movl 20(%ebp),%ebx
	pushl %ebx
	movl -28(%ebp),%ecx
	movl 4160(%ecx,%edi),%eax
	pushl %eax
	movl 28(%ebp),%ebx
	pushl %ebx
	pushl %edi
	call UnMakeMove
	addl $16,%esp
	movl smp_idle,%eax
	testl %eax,%eax
	je .L102
	cmpl $0,-12(%ebp)
	je .L102
	movl 24(%ebp),%ecx
	cmpl %ecx,min_thread_depth
	jg .L102
	cmpb $0,45204(%ebx,%edi)
	je .L165
	movl -36(%ebp),%ebx
	movl 4680(%ebx,%edi),%eax
	movl -28(%ebp),%ecx
	movl 4680(%ecx,%edi),%ebx
	subl %eax,%ebx
	movl %ebx,%eax
	sarl $2,%eax
	cmpl $1,%eax
	jle .L102
.L165:
	movl 12(%ebp),%eax
	movl %eax,45712(%edi)
	movl 16(%ebp),%eax
	movl %eax,45716(%edi)
	movl -20(%ebp),%ecx
	movl %ecx,45720(%edi)
	movl 20(%ebp),%ebx
	movl %ebx,45724(%edi)
	movl 28(%ebp),%ecx
	movl %ecx,45732(%edi)
	movl 24(%ebp),%ebx
	movl %ebx,45728(%edi)
	movl -4(%ebp),%eax
	movl %eax,45736(%edi)
	pushl %eax
	pushl %edi
	call Thread
	addl $8,%esp
	testl %eax,%eax
	je .L102
	call CheckInput
	testl %eax,%eax
	je .L167
	pushl %eax
	movl 28(%ebp),%ecx
	pushl %ecx
	call Interrupt
	addl $8,%esp
.L167:
	movl 45656(%edi),%ebx
	movl %ebx,-20(%ebp)
	cmpl %ebx,12(%ebp)
	jge .L102
	cmpl %ebx,16(%ebp)
	jle .L192
	movl %ebx,12(%ebp)
.L103:
	cmpl $0,-12(%ebp)
	jne .L170
	cmpl $0,20(%ebp)
	je .L173
	movsbl 152(%edi),%eax
	jmp .L174
.L173:
	movsbl 153(%edi),%eax
.L174:
	movl %eax,%esi
	cmpl $1,20(%ebp)
	je .L175
	pushl %edi
	leal 0(,%esi,8),%eax
	subl %esi,%eax
	leal diag_info(,%eax,4),%eax
	pushl %eax
	call AttacksBishopFunc
	movl %eax,-120(%ebp)
	movl %edx,-116(%ebp)
	pushl %edi
	pushl %esi
	call AttacksRookFunc
	movl %eax,-128(%ebp)
	movl %edx,-124(%ebp)
	sall $3,%esi
	movl b_pawn_attacks(%esi),%ecx
	movl b_pawn_attacks+4(%esi),%ebx
	andl 56(%edi),%ecx
	andl 60(%edi),%ebx
	movl %ecx,-160(%ebp)
	movl %ebx,-156(%ebp)
	movl knight_attacks(%esi),%eax
	movl knight_attacks+4(%esi),%edx
	andl 64(%edi),%eax
	andl 68(%edi),%edx
	movl -160(%ebp),%ecx
	movl -156(%ebp),%ebx
	orl %eax,%ecx
	orl %edx,%ebx
	movl %ecx,-160(%ebp)
	movl %ebx,-156(%ebp)
	movl -120(%ebp),%eax
	movl -116(%ebp),%edx
	andl 48(%edi),%eax
	andl 52(%edi),%edx
	andl (%edi),%eax
	andl 4(%edi),%edx
	movl -160(%ebp),%ecx
	movl -156(%ebp),%ebx
	orl %eax,%ecx
	orl %edx,%ebx
	movl %ecx,-160(%ebp)
	movl %ebx,-156(%ebp)
	movl -128(%ebp),%eax
	movl -124(%ebp),%edx
	andl 40(%edi),%eax
	andl 44(%edi),%edx
	andl (%edi),%eax
	andl 4(%edi),%edx
	movl -160(%ebp),%ecx
	movl -156(%ebp),%ebx
	orl %eax,%ecx
	orl %edx,%ebx
	movl %ecx,-160(%ebp)
	movl %ebx,-156(%ebp)
	movsbl 152(%edi),%eax
	jmp .L208
.L175:
	pushl %edi
	leal 0(,%esi,8),%eax
	subl %esi,%eax
	leal diag_info(,%eax,4),%eax
	pushl %eax
	call AttacksBishopFunc
	movl %eax,-136(%ebp)
	movl %edx,-132(%ebp)
	pushl %edi
	pushl %esi
	call AttacksRookFunc
	movl %eax,-144(%ebp)
	movl %edx,-140(%ebp)
	sall $3,%esi
	movl w_pawn_attacks(%esi),%ecx
	movl w_pawn_attacks+4(%esi),%ebx
	andl 96(%edi),%ecx
	andl 100(%edi),%ebx
	movl %ecx,-160(%ebp)
	movl %ebx,-156(%ebp)
	movl knight_attacks(%esi),%eax
	movl knight_attacks+4(%esi),%edx
	andl 104(%edi),%eax
	andl 108(%edi),%edx
	movl -160(%ebp),%ecx
	movl -156(%ebp),%ebx
	orl %eax,%ecx
	orl %edx,%ebx
	movl %ecx,-160(%ebp)
	movl %ebx,-156(%ebp)
	movl -136(%ebp),%eax
	movl -132(%ebp),%edx
	andl 48(%edi),%eax
	andl 52(%edi),%edx
	andl 8(%edi),%eax
	andl 12(%edi),%edx
	movl -160(%ebp),%ecx
	movl -156(%ebp),%ebx
	orl %eax,%ecx
	orl %edx,%ebx
	movl %ecx,-160(%ebp)
	movl %ebx,-156(%ebp)
	movl -144(%ebp),%eax
	movl -140(%ebp),%edx
	andl 40(%edi),%eax
	andl 44(%edi),%edx
	andl 8(%edi),%eax
	andl 12(%edi),%edx
	movl -160(%ebp),%ecx
	movl -156(%ebp),%ebx
	orl %eax,%ecx
	orl %edx,%ebx
	movl %ecx,-160(%ebp)
	movl %ebx,-156(%ebp)
	movsbl 153(%edi),%eax
.L208:
	movl king_attacks(%esi),%ecx
	movl king_attacks+4(%esi),%ebx
	andl set_mask(,%eax,8),%ecx
	andl set_mask+4(,%eax,8),%ebx
	movl %ecx,%eax
	movl %ebx,%edx
	orl -160(%ebp),%eax
	orl -156(%ebp),%edx
	testl %eax,%eax
	jne .L214
	testl %edx,%edx
	jne .L214
	xorl %eax,%eax
	jmp .L215
.L214:
	movl $1,%eax
.L215:
	testl %eax,%eax
	je .L171
	movl 28(%ebp),%ebx
	addl $-32768,%ebx
	movl %ebx,-20(%ebp)
	jmp .L172
.L171:
	movl draw_score,%ecx
	movl %ecx,-20(%ebp)
	movl 20(%ebp),%ebx
	cmpl %ebx,root_wtm
	je .L172
	negl %ecx
	movl %ecx,-20(%ebp)
.L172:
	movl -20(%ebp),%ecx
	cmpl %ecx,12(%ebp)
	jg .L209
	cmpl %ecx,16(%ebp)
	jle .L209
	movl 28(%ebp),%edx
	decl %edx
	movl %edx,%eax
	sall $5,%eax
	addl %edx,%eax
	sall $3,%eax
	leal (%eax,%edx,4),%ebx
	movl 4160(%edi,%edx,4),%edx
	movl %edx,4940(%ebx,%edi)
	movb 28(%ebp),%cl
	decb %cl
	movb %cl,5201(%eax,%edi)
	movb $0,5200(%eax,%edi)
	movb iteration_depth,%dl
	movb %dl,5202(%eax,%edi)
	jmp .L209
.L192:
	pushl %eax
	movl 28(%ebp),%ebx
	movl 4160(%edi,%ebx,4),%eax
	pushl %eax
	movl 20(%ebp),%ecx
	pushl %ecx
	movl 24(%ebp),%ebx
	pushl %ebx
	movl 28(%ebp),%ecx
	pushl %ecx
	pushl %edi
	call History
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	movl -20(%ebp),%ebx
	pushl %ebx
	pushl $1
	movl 20(%ebp),%ecx
	pushl %ecx
	movl 24(%ebp),%ebx
	pushl %ebx
	movl 28(%ebp),%ecx
	pushl %ecx
	pushl %edi
	call HashStore
	incl 22104(%edi)
	jmp .L209
.L170:
	movl -16(%ebp),%ebx
	cmpl %ebx,12(%ebp)
	je .L187
	movl 28(%ebp),%edx
	sall $5,%edx
	addl 28(%ebp),%edx
	movl 28(%ebp),%ecx
	leal (%ecx,%edx,2),%edx
	leal (%edi,%edx,4),%edx
	leal 4676(%edx),%ebx
	movl %ebx,-160(%ebp)
	addl $4940,%edx
	sall $5,%ecx
	movl 28(%ebp),%ebx
	addl %ebx,%ecx
	sall $3,%ecx
	movl %ecx,-168(%ebp)
	xorl %eax,%eax
	movb 5201(%ecx,%edi),%al
	subl %ebx,%eax
	leal 4(,%eax,4),%eax
	pushl %eax
	pushl %eax
	pushl %edx
	movl -160(%ebp),%ebx
	pushl %ebx
	call memcpy
	addl $16,%esp
	movl -168(%ebp),%eax
	addl %edi,%eax
	movw 5200(%eax),%dx
	movw %dx,4936(%eax)
	movb 5202(%eax),%dl
	movb %dl,4938(%eax)
	movl 28(%ebp),%edx
	decl %edx
	movl %edx,%eax
	sall $5,%eax
	addl %edx,%eax
	sall $3,%eax
	leal (%eax,%edx,4),%eax
	movl %eax,-160(%ebp)
	movl 4160(%edi,%edx,4),%eax
	movl -160(%ebp),%ecx
	movl %eax,4940(%ecx,%edi)
	pushl %eax
	movl 28(%ebp),%ebx
	movl -168(%ebp),%ecx
	leal (%ecx,%ebx,4),%eax
	movl 4940(%eax,%edi),%eax
	pushl %eax
	movl 20(%ebp),%ebx
	pushl %ebx
	movl 24(%ebp),%ecx
	pushl %ecx
	movl 28(%ebp),%ebx
	pushl %ebx
	pushl %edi
	call History
	addl $24,%esp
.L187:
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	movl $3,%eax
	movl -16(%ebp),%ecx
	cmpl %ecx,12(%ebp)
	jne .L188
	movl $2,%eax
.L188:
	pushl %eax
	movl 20(%ebp),%ebx
	pushl %ebx
	movl 24(%ebp),%ecx
	pushl %ecx
	movl 28(%ebp),%ebx
	pushl %ebx
	pushl %edi
	call HashStore
.L194:
	movl 12(%ebp),%eax
.L190:
	leal -180(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe1:
	.size	 Search,.Lfe1-Search
	.ident	"GCC: (GNU) pgcc-2.91.08 980214 (gcc-2.8.0 release)"
