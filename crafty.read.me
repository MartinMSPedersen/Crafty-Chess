Crafty version 8.22

-----------------------------------------------------------------------------

What's new?

1.  if you use this version, you will once again have to re-do your book
files.  hashing is more efficient, but, as a result, the hash keys are now
different and this Crafty won't find any useful info in the old book and
vice-versa.

2.  There are a couple of options at compile-time that you are going to have
to experiment with.  COMPACT_ATTACKS is the first.  define this in the
Makefile, and Crafty will use a much more compact set of attack bitmaps.
This will run 10-20% faster on a sun sparc-20, but is 5-10% slower on slow
pentiums.  It depends on cache size, memory bandwidth, and processor speed.
Simply try it with this defined and without it defined to see which is
faster.

3.  The second option to try is USE_SPLIT_SHIFTS.  Again, this will depend
on your machine, but might be faster.  *ONLY* for 32bit machines, don't do
this on the alpha or other 64bit machines.

4.  If you are running on a SPARC-20, you have yet another 20% speed
improvement at your fingertips:  -DASSEMBLER_ATTACK.  to use this you will
have to do the following:  (a) get the file fastattack.o which is a hand-
coded assembler module that has already been compiled.  (b) add this to
the makefile OBJECTS so that it will be included.  (c) do the above define
and re-make everything.  Note that this needs to have all of the above 
things defined.

5.  Several bug fixes including one rather critical one.  It turns out that
due to mis-handling the PV after crafty makes a move, it was possible for the
following problem to cause crafty to choose a really horrible move:

opponent thinks for a long time, when the actual time per move target is very
low (ie a blitz-type game, but it can happen anywhere.).  As a result, crafty
searches *very* deeply.  You make your move and crafty responds instantly.
Suppose it had searched to depth=10 after a minute plus.  After making its
move, it is ready to ponder again, and starts the search at depth=9, since
the previous search went to 10, it played the first move and is assuming you
play the 2nd, which leaves 8 valid plies of depth already done.  The first move
it searches had better be the pv move, because it might not have time to search
any other moves.  This bug caused it to not be searched first, and since it has
little time, it might not have time to search anything.  As a result, it will
play this first move under certain timing constraints, without having any sort
of search to support it.  Often as not, it's a blunder.  and it's fixed.  :)

6. other minor eval tweaks, as well as really re-writing the hash table code to
make it significantly faster and cleaner at the same time.

7. epd support is now in, thanks to Steven Edwards.  "epdhelp" will give you a
hint on what commands are there, although this is Steven's full EPD kit
integration.  No problem suites are included (yet.)  However they are scattered
all over the various chess ftp sites.

NOTE:  there is *no* crafty.exe as my dos machine is temporarily running Linux
full-time.  If anyone can compile for dos and email me the uuencoded result,
I'll add it here a.s.a.p., otherwise it's be a few days.  none of the executables
are updated, just the three source files, crafty.zip, crafty.tar.Z, and
crafty.tar.gz.  


-----------------------------------------------------------------------------
files in this directory:

total 66114
-rw-r--r--   1 hyatt    faculty    280067 Dec  5 22:04 crafty.tar.Z
-rw-r--r--   1 hyatt    faculty    169605 Dec  5 22:05 crafty.tar.gz
-rw-r--r--   1 hyatt    faculty    186117 Dec  5 22:03 crafty.zip
-rw-r--r--   1 hyatt    faculty      1816 Dec  4 13:23 fastattack.o
-rw-r--r--   1 hyatt    faculty     78826 Aug  3 09:40 go32.exe
-rw-r--r--   1 hyatt    faculty  23480292 Oct 13 15:23 large.zip
-rw-r--r--   1 hyatt    faculty   8714100 Oct 11 16:56 medium.zip
-r--r--r--   1 hyatt    faculty     69263 Aug  9 11:24 probs.Z
-rw-r--r--   1 hyatt    faculty      9653 Dec  5 12:52 read.me
-rw-r--r--   1 hyatt    faculty    159596 Oct 11 16:56 small.zip
-rw-r--r--   1 hyatt    faculty       449 Nov 22 16:16 start.zip
-rw-r--r--   1 hyatt    faculty    593293 Oct 26 14:07 xboard.tar.Z
-----------------------------------------------------------------------------
executable choices.

crafty.exe/go32.exe are the two executables you need to run crafty under
dos, or under windows in a dos window.  go32 is part of the DJGPP port of
gnu cc 2.6.3, and must be "visible" (in a directory included in your PATH
variable) when you try to execute crafty.  Note that crafty needs at least
a 386, otherwise go32 won't run and neither will crafty.  Note that this has
proven to be a problem on some systems.  go32 (which crafty invokes as part
of the initialization done by the djgpp cc (gnu cc) compiler, has run into
difficulties with some memory manager configurations.  It has actually
crashed in the first Windows '95 test I know of.  You might have to play
with your config.sys to get a workable configuration, although it's working
fine on my windows for workgroups 3.11 system, and also under dos 6.22
among others.

crafty.linux is a gcc version of crafty, compiled using gcc 2.6.3, for those
using linux, but having a version of gcc that won't compile crafty's source
correctly.

-----------------------------------------------------------------------------
book database choices.

large.zip, medium.zip and small.zip are the raw input files to make the three
different sized books.  large produces a 60mb opening database with 100K GM
games; medium produces a 30MB database, and small will produce a 1MB database.
On my sparc-20, large takes about 7 minutes to build, medium around 3 minutes,
and small is under minute.  Note that you will need at least double this space
to create the files, as temporary stuff is written to disk along the way, and
then deleted later.

crafty
book create <filename> 60
quit

<filename> should be replaced by what you get when you unzip the book file
of your choice.

start.zip contains a small file that is used to create books.bin.
books.bin is created as follows:

crafty
books create start.pgn 60
quit

this file contains suggested openings that fit Crafty's "open" style of
play better.  You can edit/modify this at will, and it takes a fraction of
a second to re-build after modification, so the big book file can be left 
alone.  

Note that the "60" is arbitrary, and is used to cut book lines off at roughly
60 plies.  you "can" say 500, so that the entire games will be stored, but you
need even more disk space.  you can also reduce this number to 30 (15 moves for
each side to conserve disk space as needed, since the book will contain far
fewer positions.

-----------------------------------------------------------------------------
crafty.zip is a zip file that contains a complete set of source and
header files for crafty and a SUN makefile that you will have to tweak for
your machine.  ditto for crafty.tar.gz just using gzip and tar instead for
those that don't have plain zip.

NOTE:  configuration has changed.  Now, all changes are made in "Makefile"
rather than types.h.  In Makefile there are three variables you need to
define as per instructions in the Makefile.  One chooses the target machine,
the other two control where the book files and log files are kept.  The 
intent here is that you will fix the Makefile and save it, so that the next
time you get the source, you can copy your makefile in and be ready.  Much
easier, with fewer problems.

Note that you probably need only change the #define SUN to #define LINUX
for example, and it will self-configure for LINUX. Any of the machines in
the comments can be done like this.  others may take some playing, but the
options are commented to help.

If you are using gcc, there is a makefile.linux that should fit your needs
perfectly, since linux uses gcc.  NOTICE:  if you are running linux, and
have a gcc earlier than 2.6.3, crafty probably will compile cleanly but
won't run.  Early versions seem to have a defective implementation of the
long long data type, which breaks crafty completely.  Note that there is
a linux version of crafty (crafty.linux) here compiled with gcc 2.6.3, if
you have this problem.  You will get an error when you start it, about the
wrong version of ld.so.n, but it seems to run correctly.

-----------------------------------------------------------------------------
xboard.tar.Z is the unix Xboard program with modifications to work better
with crafty, including allowing it to "whisper" and "kibitz" when playing
on a server, as well as correctly resuming adjourned games on servers.

To use Crafty with xboard, you do the following:

xboard -fcp "crafty ics st=<n>" where <n> is replaced by the number of
seconds per move.  This will let you play using the mouse, etc., however,
most "options" on xboard don't work.  if you want to see crafty's "thought 
processes", the easiest way is to "ls log.*" and note the "highest" log
file number.  then "tail -f log.21" (or whatever the highest number is.)

to use it to play on ics/fics/etc, you can

xboard -ics -fcp "crafty ..." and create a .icsrc file, first line is login
id, second line is password, remaining lines are simply "force-fed" to the
server, like "set formula ....", etc.

If you want to run crafty as a "robot" like I do on ICC and others do on FICS,
then add "-zp" as an option to xboard.  This enables zippy, which will then auto-
accept match requests, etc.
-----------------------------------------------------------------------------
Bob Hyatt
hyatt@cis.uab.edu
